<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create words and rules

organo_selected = noone

organo_words[0] = ds_list_create()
ds_list_add(organo_words[0], "Junior", "Associate", "Senior", "Lead")
organo_words[1] = ds_list_create()
ds_list_add(organo_words[1], "Managing", "Executive", "Vice", "Acting")
organo_words[2] = ds_list_create()
ds_list_add(organo_words[2], "Marketing", "Information", "Finance", "Human Resources", "Strategy", "Account")
organo_words[3] = ds_list_create()
ds_list_add(organo_words[3], "Analyst", "Manager", "Administrator", "Consultant", "Engineer", "Director", "Representative")

rulenum = choose(0,1,2,3)

ow_selection = ds_list_create()
ds_list_copy(ow_selection, organo_words[rulenum])

for (i = 0; i &lt; 3; i++)
{
    ds_list_shuffle(ow_selection)
    rule[i] = ow_selection[| 0]
    ds_list_delete(ow_selection, 0) //ensure no dups
}

//Destroy unnecessary list    
ds_list_destroy(ow_selection)

//Rules description
rules = ""+rule[2]+" is below "+rule[1] + "#"+rule[1]+" is below "+rule[0]




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set rules alarm and misc vars

order_str = ""

state = 0 //0 - playing, 1 - won, 2 - lost
state_text[0] = "playing!"
state_text[1] = "right!"
state_text[2] = "wrong!"

alarm[0] = room_speed*5

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Leave

room_goto(rom_gamehub)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Figure out the player's score

organogram_score()

score += 2

alarm[2] = room_speed*5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create organotiles

for (n = 0; n &lt; _length(rules); n += 1)
{
    with (instance_create(room_width/2, room_height/2, obj_organotile))
    {
        do
        {
            x = room_width*0.2 + irandom(room_width*0.6)
            y = room_height*0.2 + irandom(room_height*0.6)
        } until (place_free(x, y))
        
        var i, lst;
        
        label = ""
        
        for (i = 0; i &lt; _length(other.organo_words); i += 1)
        {
            lst = other.organo_words[i]
            if (i == rulenum)
               label += rules[other.n] + " "
            else
               label +=  lst[| irandom(_length(lst))-1] + " "
        }
        
        label = string_delete(label, string_length(label), 1) //remove trailing space
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go off and set gameplay alarm

alarm[1] = room_speed*10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move selected organotile with mouse cursor

if organo_selected == noone
    exit
    
with (organo_selected)
{
    x = mouse_x
    y = mouse_y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy remaining lists

var i;

for (i = 0; i &lt; _length(organo_words); i += 1)
    _free(organo_words[i], ds_type_list)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display rules at the beginning and results at the end

draw_set_font(fnt_body)
draw_set_colour(c_black)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)

if (alarm[0] &gt; -1)
    draw_text_ext(room_width/2, room_height/3, rules, -1, room_width * 0.6)
else if (alarm[1] == -1)
    draw_text_ext(room_width/2, room_height/3, order_str+"##You got it "+state_text[state], -1, room_width * 0.6)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
