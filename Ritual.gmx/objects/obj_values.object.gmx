<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set values

values = ds_list_create()

ds_list_add(values, "Diversity"
                  , "Integrity"
                  , "Innovation"
                  , "Excellence"
                  , "Passion"
                  , "Big-Picture"
                  , "Responsibility"
                  , "Accountability"
                  , "Dynamism")
ds_list_add(values, "Rationality"
                  , "Synergy"
                  , "Teamwork"
                  , "Out-of-the-box thinking"
                  , "People-focused"
                  , "Value-driven"
                  , "Consistency"
                  , "Delivery"
                  , "Correctness"
                  , "Communication"
                  , "Goalpost-shifting"
                  , "Punctuality"
                  , "Rigor"
                  , "Thoroughness"
                  , "Fun")
                  
ds_list_shuffle(values)

for (i = 0; i &lt; 6; i += 1)
{
    our_values[i] = values[| 0]
    ds_list_delete(values, 0)
}
                  



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start memorisation alarm

state = 0 //0 - memorisation, 1 - guessing, 2 - finished
correct = 0
value_current = -1

alarm[0] = room_speed*6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to the next choice

if (value_current == array_length_1d(our_values)) //we're finished
{
    event_user(0)
    exit
}

state = 1
value_current += 1

values_createguesses(value_current)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finished guessing, tally the score.

state = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy values list

ds_list_destroy(values)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw various things

draw_set_valign(fa_middle)
draw_set_halign(fa_center)
draw_set_colour(c_black)

switch state
{
    case 0: //memorisation
        draw_set_font(fnt_title)
        draw_text(room_width/2, room_height/4, "Our values")
        draw_set_font(fnt_body)
        for (i = 0; i &lt; array_length_1d(our_values); i += 1)
            draw_text(room_width/2, room_height * 0.3 + (0.1*i), our_values[i])
        break;
        
    case 1: //guessing
        draw_set_font(fnt_body)
        draw_text(room_width * 3/4, room_height * 0.2, string(correct)+"/"+string(array_length_1d(our_values)))
        break;
        
    case 2: //finished
        draw_set_font(fnt_body)
        // stretch goal: funny text here
        draw_text_ext(room_width/2, room_height/2, "You got "+string(correct)+" of our "+string(array_length_1d(our_values))+" corporate values correct and in order. This will be remembered for your appraisal", -1, room_width * 2/3)
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
